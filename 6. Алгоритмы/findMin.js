// –ü–æ–∏—Å–∫ –º–∏–Ω–∏–º—É–º–∞ –∏–ª–∏ –º–∞–∫—Å–∏–º—É–º–∞
// –°–ª–æ–∂–Ω–æ—Å—Ç—å: ùëÇ(ùëõ), –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥ –ø–æ –º–∞—Å—Å–∏–≤—É.

/**
 * –ü–æ–∏—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
 * @param {number[]} arr - –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
 * @returns {number} –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 */
function findMin(arr) {
    let minVal = arr[0];
    for (let i = 1; i < arr.length; i++) {
      if (arr[i] < minVal) {
        minVal = arr[i];
      }
    }
    return minVal;
  }
  
  /**
   * –ü–æ–∏—Å–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
   * @param {number[]} arr - –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
   * @returns {number} –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   */
  function findMax(arr) {
    let maxVal = arr[0];
    for (let i = 1; i < arr.length; i++) {
      if (arr[i] > maxVal) {
        maxVal = arr[i];
      }
    }
    return maxVal;
  }
  
  // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  const arr2 = [5, 3, 8, 1, 2];
  console.log(findMin(arr2)); // 1
  console.log(findMax(arr2)); // 8
  