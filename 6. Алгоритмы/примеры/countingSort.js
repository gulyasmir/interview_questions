// Counting Sort (–ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –∑–Ω–∞—á–µ–Ω–∏–π)
// –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ –ª–µ–∂–∞—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ  [0..ùëò]

// –°–ª–æ–∂–Ω–æ—Å—Ç—å: O(n+k), –≥–¥–µ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, k ‚Äî —Ä–∞–∑–º–µ—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–π. 
// –ü—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ k –Ω–µ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–æ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å n, –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —ç—Ç–æ –ª–∏–Ω–µ–π–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º.

/**
 * –ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ–¥—Å—á—ë—Ç–æ–º (Counting Sort).
 * @param {number[]} arr - –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
 * @param {number} k - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ arr
 * @returns {number[]} –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
 */
function countingSort(arr, k) {
    // –°–æ–∑–¥–∞—ë–º –º–∞—Å—Å–∏–≤ –ø–æ–¥—Å—á—ë—Ç–∞
    const count = new Array(k + 1).fill(0);
  
    // –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    for (let i = 0; i < arr.length; i++) {
      count[arr[i]]++;
    }
  
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = [];
    for (let value = 0; value <= k; value++) {
      // –¥–æ–±–∞–≤–ª—è–µ–º value count[value] —Ä–∞–∑
      for (let j = 0; j < count[value]; j++) {
        result.push(value);
      }
    }
  
    return result;
  }
  
  // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  const arr4 = [4, 2, 4, 3, 1, 2, 0];
  const maxVal = 4; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤–µ
  console.log(countingSort(arr4, maxVal));
  // [0, 1, 2, 2, 3, 4, 4]
  