/*
Оптимизация работы с большими массивами
Напишите функцию, которая принимает массив чисел и возвращает первые n чисел, которые являются простыми. Решение должно быть оптимизировано для больших массивов.
*/

function findPrimes(arr, n) {
    const isPrime = (num) => {
      if (num < 2) return false;
      for (let i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) return false;
      }
      return true;
    };
  
    const primes = [];
    for (const num of arr) {
      if (isPrime(num)) primes.push(num);
      if (primes.length === n) break;
    }
    return primes;
  }
  
console.log(findPrimes([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 3)); // [11, 13, 17]
  
/*
Пояснение:

Мы создаём вспомогательную функцию isPrime, которая проверяет, является ли число простым. 
Проверка завершается быстрее, поскольку мы итерируемся только до квадратного корня числа.
Основная функция итерируется по массиву, добавляя простые числа в новый массив primes.
Как только найдено n простых чисел, цикл прерывается, чтобы оптимизировать производительность.
*/
  